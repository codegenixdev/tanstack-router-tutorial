/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ContactUsRouteImport } from './routes/contact-us'
import { Route as AboutRouteImport } from './routes/about'
import { Route as SearchRouteRouteImport } from './routes/search/route'
import { Route as ProductsRouteRouteImport } from './routes/products/route'
import { Route as CategoriesRouteRouteImport } from './routes/categories/route'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as AccountRouteRouteImport } from './routes/account/route'
import { Route as ContactUsCountryRouteImport } from './routes/contact-us.$country'
import { Route as AdminReportsRouteImport } from './routes/admin/reports'
import { Route as Char123LocaleChar125BlogRouteRouteImport } from './routes/{-$locale}/blog/route'
import { Route as ProductsProductIdRouteRouteImport } from './routes/products/$productId/route'
import { Route as CategoriesCategoryIdRouteRouteImport } from './routes/categories/$categoryId/route'
import { Route as AdminCategoriesRouteRouteImport } from './routes/admin/categories/route'
import { Route as AccountFilesRouteRouteImport } from './routes/account/files/route'
import { Route as AccountFilesIndexRouteImport } from './routes/account/files/index'
import { Route as ContactUsCountryCityRouteImport } from './routes/contact-us.$country.$city'
import { Route as AdminCategoriesCreateRouteImport } from './routes/admin/categories_.create'
import { Route as Char123LocaleChar125BlogCategoryIdRouteRouteImport } from './routes/{-$locale}/blog/$categoryId/route'
import { Route as CategoriesCategoryIdSubcategoryIdRouteRouteImport } from './routes/categories/$categoryId/$subcategoryId/route'
import { Route as AdminCategoriesCategoryIdIndexRouteImport } from './routes/admin/categories/$categoryId/index'
import { Route as AccountFilesSplatIndexRouteImport } from './routes/account/files/$/index'
import { Route as Char123LocaleChar125BlogCategoryIdPostIdRouteRouteImport } from './routes/{-$locale}/blog/$categoryId/$postId/route'
import { Route as CategoriesCategoryIdSubcategoryIdProductIdRouteRouteImport } from './routes/categories/$categoryId/$subcategoryId/$productId/route'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactUsRoute = ContactUsRouteImport.update({
  id: '/contact-us',
  path: '/contact-us',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRouteRoute = SearchRouteRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRouteRoute = ProductsRouteRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const CategoriesRouteRoute = CategoriesRouteRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRouteRoute = AccountRouteRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactUsCountryRoute = ContactUsCountryRouteImport.update({
  id: '/$country',
  path: '/$country',
  getParentRoute: () => ContactUsRoute,
} as any)
const AdminReportsRoute = AdminReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => AdminRouteRoute,
} as any)
const Char123LocaleChar125BlogRouteRoute =
  Char123LocaleChar125BlogRouteRouteImport.update({
    id: '/{-$locale}/blog',
    path: '/{-$locale}/blog',
    getParentRoute: () => rootRouteImport,
  } as any)
const ProductsProductIdRouteRoute = ProductsProductIdRouteRouteImport.update({
  id: '/$productId',
  path: '/$productId',
  getParentRoute: () => ProductsRouteRoute,
} as any)
const CategoriesCategoryIdRouteRoute =
  CategoriesCategoryIdRouteRouteImport.update({
    id: '/$categoryId',
    path: '/$categoryId',
    getParentRoute: () => CategoriesRouteRoute,
  } as any)
const AdminCategoriesRouteRoute = AdminCategoriesRouteRouteImport.update({
  id: '/categories',
  path: '/categories',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AccountFilesRouteRoute = AccountFilesRouteRouteImport.update({
  id: '/files',
  path: '/files',
  getParentRoute: () => AccountRouteRoute,
} as any)
const AccountFilesIndexRoute = AccountFilesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AccountFilesRouteRoute,
} as any)
const ContactUsCountryCityRoute = ContactUsCountryCityRouteImport.update({
  id: '/$city',
  path: '/$city',
  getParentRoute: () => ContactUsCountryRoute,
} as any)
const AdminCategoriesCreateRoute = AdminCategoriesCreateRouteImport.update({
  id: '/categories_/create',
  path: '/categories/create',
  getParentRoute: () => AdminRouteRoute,
} as any)
const Char123LocaleChar125BlogCategoryIdRouteRoute =
  Char123LocaleChar125BlogCategoryIdRouteRouteImport.update({
    id: '/$categoryId',
    path: '/$categoryId',
    getParentRoute: () => Char123LocaleChar125BlogRouteRoute,
  } as any)
const CategoriesCategoryIdSubcategoryIdRouteRoute =
  CategoriesCategoryIdSubcategoryIdRouteRouteImport.update({
    id: '/$subcategoryId',
    path: '/$subcategoryId',
    getParentRoute: () => CategoriesCategoryIdRouteRoute,
  } as any)
const AdminCategoriesCategoryIdIndexRoute =
  AdminCategoriesCategoryIdIndexRouteImport.update({
    id: '/$categoryId/',
    path: '/$categoryId/',
    getParentRoute: () => AdminCategoriesRouteRoute,
  } as any)
const AccountFilesSplatIndexRoute = AccountFilesSplatIndexRouteImport.update({
  id: '/$/',
  path: '/$/',
  getParentRoute: () => AccountFilesRouteRoute,
} as any)
const Char123LocaleChar125BlogCategoryIdPostIdRouteRoute =
  Char123LocaleChar125BlogCategoryIdPostIdRouteRouteImport.update({
    id: '/$postId',
    path: '/$postId',
    getParentRoute: () => Char123LocaleChar125BlogCategoryIdRouteRoute,
  } as any)
const CategoriesCategoryIdSubcategoryIdProductIdRouteRoute =
  CategoriesCategoryIdSubcategoryIdProductIdRouteRouteImport.update({
    id: '/$productId',
    path: '/$productId',
    getParentRoute: () => CategoriesCategoryIdSubcategoryIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/account': typeof AccountRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/categories': typeof CategoriesRouteRouteWithChildren
  '/products': typeof ProductsRouteRouteWithChildren
  '/search': typeof SearchRouteRoute
  '/about': typeof AboutRoute
  '/contact-us': typeof ContactUsRouteWithChildren
  '/login': typeof LoginRoute
  '/account/files': typeof AccountFilesRouteRouteWithChildren
  '/admin/categories': typeof AdminCategoriesRouteRouteWithChildren
  '/categories/$categoryId': typeof CategoriesCategoryIdRouteRouteWithChildren
  '/products/$productId': typeof ProductsProductIdRouteRoute
  '/{-$locale}/blog': typeof Char123LocaleChar125BlogRouteRouteWithChildren
  '/admin/reports': typeof AdminReportsRoute
  '/contact-us/$country': typeof ContactUsCountryRouteWithChildren
  '/categories/$categoryId/$subcategoryId': typeof CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren
  '/{-$locale}/blog/$categoryId': typeof Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren
  '/admin/categories/create': typeof AdminCategoriesCreateRoute
  '/contact-us/$country/$city': typeof ContactUsCountryCityRoute
  '/account/files/': typeof AccountFilesIndexRoute
  '/categories/$categoryId/$subcategoryId/$productId': typeof CategoriesCategoryIdSubcategoryIdProductIdRouteRoute
  '/{-$locale}/blog/$categoryId/$postId': typeof Char123LocaleChar125BlogCategoryIdPostIdRouteRoute
  '/account/files/$': typeof AccountFilesSplatIndexRoute
  '/admin/categories/$categoryId': typeof AdminCategoriesCategoryIdIndexRoute
}
export interface FileRoutesByTo {
  '/account': typeof AccountRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/categories': typeof CategoriesRouteRouteWithChildren
  '/products': typeof ProductsRouteRouteWithChildren
  '/search': typeof SearchRouteRoute
  '/about': typeof AboutRoute
  '/contact-us': typeof ContactUsRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/categories': typeof AdminCategoriesRouteRouteWithChildren
  '/categories/$categoryId': typeof CategoriesCategoryIdRouteRouteWithChildren
  '/products/$productId': typeof ProductsProductIdRouteRoute
  '/{-$locale}/blog': typeof Char123LocaleChar125BlogRouteRouteWithChildren
  '/admin/reports': typeof AdminReportsRoute
  '/contact-us/$country': typeof ContactUsCountryRouteWithChildren
  '/categories/$categoryId/$subcategoryId': typeof CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren
  '/{-$locale}/blog/$categoryId': typeof Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren
  '/admin/categories/create': typeof AdminCategoriesCreateRoute
  '/contact-us/$country/$city': typeof ContactUsCountryCityRoute
  '/account/files': typeof AccountFilesIndexRoute
  '/categories/$categoryId/$subcategoryId/$productId': typeof CategoriesCategoryIdSubcategoryIdProductIdRouteRoute
  '/{-$locale}/blog/$categoryId/$postId': typeof Char123LocaleChar125BlogCategoryIdPostIdRouteRoute
  '/account/files/$': typeof AccountFilesSplatIndexRoute
  '/admin/categories/$categoryId': typeof AdminCategoriesCategoryIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/account': typeof AccountRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/categories': typeof CategoriesRouteRouteWithChildren
  '/products': typeof ProductsRouteRouteWithChildren
  '/search': typeof SearchRouteRoute
  '/about': typeof AboutRoute
  '/contact-us': typeof ContactUsRouteWithChildren
  '/login': typeof LoginRoute
  '/account/files': typeof AccountFilesRouteRouteWithChildren
  '/admin/categories': typeof AdminCategoriesRouteRouteWithChildren
  '/categories/$categoryId': typeof CategoriesCategoryIdRouteRouteWithChildren
  '/products/$productId': typeof ProductsProductIdRouteRoute
  '/{-$locale}/blog': typeof Char123LocaleChar125BlogRouteRouteWithChildren
  '/admin/reports': typeof AdminReportsRoute
  '/contact-us/$country': typeof ContactUsCountryRouteWithChildren
  '/categories/$categoryId/$subcategoryId': typeof CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren
  '/{-$locale}/blog/$categoryId': typeof Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren
  '/admin/categories_/create': typeof AdminCategoriesCreateRoute
  '/contact-us/$country/$city': typeof ContactUsCountryCityRoute
  '/account/files/': typeof AccountFilesIndexRoute
  '/categories/$categoryId/$subcategoryId/$productId': typeof CategoriesCategoryIdSubcategoryIdProductIdRouteRoute
  '/{-$locale}/blog/$categoryId/$postId': typeof Char123LocaleChar125BlogCategoryIdPostIdRouteRoute
  '/account/files/$/': typeof AccountFilesSplatIndexRoute
  '/admin/categories/$categoryId/': typeof AdminCategoriesCategoryIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/account'
    | '/admin'
    | '/categories'
    | '/products'
    | '/search'
    | '/about'
    | '/contact-us'
    | '/login'
    | '/account/files'
    | '/admin/categories'
    | '/categories/$categoryId'
    | '/products/$productId'
    | '/{-$locale}/blog'
    | '/admin/reports'
    | '/contact-us/$country'
    | '/categories/$categoryId/$subcategoryId'
    | '/{-$locale}/blog/$categoryId'
    | '/admin/categories/create'
    | '/contact-us/$country/$city'
    | '/account/files/'
    | '/categories/$categoryId/$subcategoryId/$productId'
    | '/{-$locale}/blog/$categoryId/$postId'
    | '/account/files/$'
    | '/admin/categories/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/account'
    | '/admin'
    | '/categories'
    | '/products'
    | '/search'
    | '/about'
    | '/contact-us'
    | '/login'
    | '/admin/categories'
    | '/categories/$categoryId'
    | '/products/$productId'
    | '/{-$locale}/blog'
    | '/admin/reports'
    | '/contact-us/$country'
    | '/categories/$categoryId/$subcategoryId'
    | '/{-$locale}/blog/$categoryId'
    | '/admin/categories/create'
    | '/contact-us/$country/$city'
    | '/account/files'
    | '/categories/$categoryId/$subcategoryId/$productId'
    | '/{-$locale}/blog/$categoryId/$postId'
    | '/account/files/$'
    | '/admin/categories/$categoryId'
  id:
    | '__root__'
    | '/account'
    | '/admin'
    | '/categories'
    | '/products'
    | '/search'
    | '/about'
    | '/contact-us'
    | '/login'
    | '/account/files'
    | '/admin/categories'
    | '/categories/$categoryId'
    | '/products/$productId'
    | '/{-$locale}/blog'
    | '/admin/reports'
    | '/contact-us/$country'
    | '/categories/$categoryId/$subcategoryId'
    | '/{-$locale}/blog/$categoryId'
    | '/admin/categories_/create'
    | '/contact-us/$country/$city'
    | '/account/files/'
    | '/categories/$categoryId/$subcategoryId/$productId'
    | '/{-$locale}/blog/$categoryId/$postId'
    | '/account/files/$/'
    | '/admin/categories/$categoryId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AccountRouteRoute: typeof AccountRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  CategoriesRouteRoute: typeof CategoriesRouteRouteWithChildren
  ProductsRouteRoute: typeof ProductsRouteRouteWithChildren
  SearchRouteRoute: typeof SearchRouteRoute
  AboutRoute: typeof AboutRoute
  ContactUsRoute: typeof ContactUsRouteWithChildren
  LoginRoute: typeof LoginRoute
  Char123LocaleChar125BlogRouteRoute: typeof Char123LocaleChar125BlogRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact-us': {
      id: '/contact-us'
      path: '/contact-us'
      fullPath: '/contact-us'
      preLoaderRoute: typeof ContactUsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/categories': {
      id: '/categories'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact-us/$country': {
      id: '/contact-us/$country'
      path: '/$country'
      fullPath: '/contact-us/$country'
      preLoaderRoute: typeof ContactUsCountryRouteImport
      parentRoute: typeof ContactUsRoute
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/{-$locale}/blog': {
      id: '/{-$locale}/blog'
      path: '/{-$locale}/blog'
      fullPath: '/{-$locale}/blog'
      preLoaderRoute: typeof Char123LocaleChar125BlogRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdRouteRouteImport
      parentRoute: typeof ProductsRouteRoute
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdRouteRouteImport
      parentRoute: typeof CategoriesRouteRoute
    }
    '/admin/categories': {
      id: '/admin/categories'
      path: '/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesRouteRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/account/files': {
      id: '/account/files'
      path: '/files'
      fullPath: '/account/files'
      preLoaderRoute: typeof AccountFilesRouteRouteImport
      parentRoute: typeof AccountRouteRoute
    }
    '/account/files/': {
      id: '/account/files/'
      path: '/'
      fullPath: '/account/files/'
      preLoaderRoute: typeof AccountFilesIndexRouteImport
      parentRoute: typeof AccountFilesRouteRoute
    }
    '/contact-us/$country/$city': {
      id: '/contact-us/$country/$city'
      path: '/$city'
      fullPath: '/contact-us/$country/$city'
      preLoaderRoute: typeof ContactUsCountryCityRouteImport
      parentRoute: typeof ContactUsCountryRoute
    }
    '/admin/categories_/create': {
      id: '/admin/categories_/create'
      path: '/categories/create'
      fullPath: '/admin/categories/create'
      preLoaderRoute: typeof AdminCategoriesCreateRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/{-$locale}/blog/$categoryId': {
      id: '/{-$locale}/blog/$categoryId'
      path: '/$categoryId'
      fullPath: '/{-$locale}/blog/$categoryId'
      preLoaderRoute: typeof Char123LocaleChar125BlogCategoryIdRouteRouteImport
      parentRoute: typeof Char123LocaleChar125BlogRouteRoute
    }
    '/categories/$categoryId/$subcategoryId': {
      id: '/categories/$categoryId/$subcategoryId'
      path: '/$subcategoryId'
      fullPath: '/categories/$categoryId/$subcategoryId'
      preLoaderRoute: typeof CategoriesCategoryIdSubcategoryIdRouteRouteImport
      parentRoute: typeof CategoriesCategoryIdRouteRoute
    }
    '/admin/categories/$categoryId/': {
      id: '/admin/categories/$categoryId/'
      path: '/$categoryId'
      fullPath: '/admin/categories/$categoryId'
      preLoaderRoute: typeof AdminCategoriesCategoryIdIndexRouteImport
      parentRoute: typeof AdminCategoriesRouteRoute
    }
    '/account/files/$/': {
      id: '/account/files/$/'
      path: '/$'
      fullPath: '/account/files/$'
      preLoaderRoute: typeof AccountFilesSplatIndexRouteImport
      parentRoute: typeof AccountFilesRouteRoute
    }
    '/{-$locale}/blog/$categoryId/$postId': {
      id: '/{-$locale}/blog/$categoryId/$postId'
      path: '/$postId'
      fullPath: '/{-$locale}/blog/$categoryId/$postId'
      preLoaderRoute: typeof Char123LocaleChar125BlogCategoryIdPostIdRouteRouteImport
      parentRoute: typeof Char123LocaleChar125BlogCategoryIdRouteRoute
    }
    '/categories/$categoryId/$subcategoryId/$productId': {
      id: '/categories/$categoryId/$subcategoryId/$productId'
      path: '/$productId'
      fullPath: '/categories/$categoryId/$subcategoryId/$productId'
      preLoaderRoute: typeof CategoriesCategoryIdSubcategoryIdProductIdRouteRouteImport
      parentRoute: typeof CategoriesCategoryIdSubcategoryIdRouteRoute
    }
  }
}

interface AccountFilesRouteRouteChildren {
  AccountFilesIndexRoute: typeof AccountFilesIndexRoute
  AccountFilesSplatIndexRoute: typeof AccountFilesSplatIndexRoute
}

const AccountFilesRouteRouteChildren: AccountFilesRouteRouteChildren = {
  AccountFilesIndexRoute: AccountFilesIndexRoute,
  AccountFilesSplatIndexRoute: AccountFilesSplatIndexRoute,
}

const AccountFilesRouteRouteWithChildren =
  AccountFilesRouteRoute._addFileChildren(AccountFilesRouteRouteChildren)

interface AccountRouteRouteChildren {
  AccountFilesRouteRoute: typeof AccountFilesRouteRouteWithChildren
}

const AccountRouteRouteChildren: AccountRouteRouteChildren = {
  AccountFilesRouteRoute: AccountFilesRouteRouteWithChildren,
}

const AccountRouteRouteWithChildren = AccountRouteRoute._addFileChildren(
  AccountRouteRouteChildren,
)

interface AdminCategoriesRouteRouteChildren {
  AdminCategoriesCategoryIdIndexRoute: typeof AdminCategoriesCategoryIdIndexRoute
}

const AdminCategoriesRouteRouteChildren: AdminCategoriesRouteRouteChildren = {
  AdminCategoriesCategoryIdIndexRoute: AdminCategoriesCategoryIdIndexRoute,
}

const AdminCategoriesRouteRouteWithChildren =
  AdminCategoriesRouteRoute._addFileChildren(AdminCategoriesRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminCategoriesRouteRoute: typeof AdminCategoriesRouteRouteWithChildren
  AdminReportsRoute: typeof AdminReportsRoute
  AdminCategoriesCreateRoute: typeof AdminCategoriesCreateRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminCategoriesRouteRoute: AdminCategoriesRouteRouteWithChildren,
  AdminReportsRoute: AdminReportsRoute,
  AdminCategoriesCreateRoute: AdminCategoriesCreateRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface CategoriesCategoryIdSubcategoryIdRouteRouteChildren {
  CategoriesCategoryIdSubcategoryIdProductIdRouteRoute: typeof CategoriesCategoryIdSubcategoryIdProductIdRouteRoute
}

const CategoriesCategoryIdSubcategoryIdRouteRouteChildren: CategoriesCategoryIdSubcategoryIdRouteRouteChildren =
  {
    CategoriesCategoryIdSubcategoryIdProductIdRouteRoute:
      CategoriesCategoryIdSubcategoryIdProductIdRouteRoute,
  }

const CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren =
  CategoriesCategoryIdSubcategoryIdRouteRoute._addFileChildren(
    CategoriesCategoryIdSubcategoryIdRouteRouteChildren,
  )

interface CategoriesCategoryIdRouteRouteChildren {
  CategoriesCategoryIdSubcategoryIdRouteRoute: typeof CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren
}

const CategoriesCategoryIdRouteRouteChildren: CategoriesCategoryIdRouteRouteChildren =
  {
    CategoriesCategoryIdSubcategoryIdRouteRoute:
      CategoriesCategoryIdSubcategoryIdRouteRouteWithChildren,
  }

const CategoriesCategoryIdRouteRouteWithChildren =
  CategoriesCategoryIdRouteRoute._addFileChildren(
    CategoriesCategoryIdRouteRouteChildren,
  )

interface CategoriesRouteRouteChildren {
  CategoriesCategoryIdRouteRoute: typeof CategoriesCategoryIdRouteRouteWithChildren
}

const CategoriesRouteRouteChildren: CategoriesRouteRouteChildren = {
  CategoriesCategoryIdRouteRoute: CategoriesCategoryIdRouteRouteWithChildren,
}

const CategoriesRouteRouteWithChildren = CategoriesRouteRoute._addFileChildren(
  CategoriesRouteRouteChildren,
)

interface ProductsRouteRouteChildren {
  ProductsProductIdRouteRoute: typeof ProductsProductIdRouteRoute
}

const ProductsRouteRouteChildren: ProductsRouteRouteChildren = {
  ProductsProductIdRouteRoute: ProductsProductIdRouteRoute,
}

const ProductsRouteRouteWithChildren = ProductsRouteRoute._addFileChildren(
  ProductsRouteRouteChildren,
)

interface ContactUsCountryRouteChildren {
  ContactUsCountryCityRoute: typeof ContactUsCountryCityRoute
}

const ContactUsCountryRouteChildren: ContactUsCountryRouteChildren = {
  ContactUsCountryCityRoute: ContactUsCountryCityRoute,
}

const ContactUsCountryRouteWithChildren =
  ContactUsCountryRoute._addFileChildren(ContactUsCountryRouteChildren)

interface ContactUsRouteChildren {
  ContactUsCountryRoute: typeof ContactUsCountryRouteWithChildren
}

const ContactUsRouteChildren: ContactUsRouteChildren = {
  ContactUsCountryRoute: ContactUsCountryRouteWithChildren,
}

const ContactUsRouteWithChildren = ContactUsRoute._addFileChildren(
  ContactUsRouteChildren,
)

interface Char123LocaleChar125BlogCategoryIdRouteRouteChildren {
  Char123LocaleChar125BlogCategoryIdPostIdRouteRoute: typeof Char123LocaleChar125BlogCategoryIdPostIdRouteRoute
}

const Char123LocaleChar125BlogCategoryIdRouteRouteChildren: Char123LocaleChar125BlogCategoryIdRouteRouteChildren =
  {
    Char123LocaleChar125BlogCategoryIdPostIdRouteRoute:
      Char123LocaleChar125BlogCategoryIdPostIdRouteRoute,
  }

const Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren =
  Char123LocaleChar125BlogCategoryIdRouteRoute._addFileChildren(
    Char123LocaleChar125BlogCategoryIdRouteRouteChildren,
  )

interface Char123LocaleChar125BlogRouteRouteChildren {
  Char123LocaleChar125BlogCategoryIdRouteRoute: typeof Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren
}

const Char123LocaleChar125BlogRouteRouteChildren: Char123LocaleChar125BlogRouteRouteChildren =
  {
    Char123LocaleChar125BlogCategoryIdRouteRoute:
      Char123LocaleChar125BlogCategoryIdRouteRouteWithChildren,
  }

const Char123LocaleChar125BlogRouteRouteWithChildren =
  Char123LocaleChar125BlogRouteRoute._addFileChildren(
    Char123LocaleChar125BlogRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  AccountRouteRoute: AccountRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  CategoriesRouteRoute: CategoriesRouteRouteWithChildren,
  ProductsRouteRoute: ProductsRouteRouteWithChildren,
  SearchRouteRoute: SearchRouteRoute,
  AboutRoute: AboutRoute,
  ContactUsRoute: ContactUsRouteWithChildren,
  LoginRoute: LoginRoute,
  Char123LocaleChar125BlogRouteRoute:
    Char123LocaleChar125BlogRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
